{"version":3,"sources":["hooks/useSocket.js","hooks/useClientDetails.js","components/SelectUsername/SelectUsername.js","components/SelectUsername/index.js","components/SelectRoom/SelectRoom.js","components/SelectRoom/index.js","components/SelectScreen/SelectScreen.js","components/SelectScreen/index.js","components/YoutubePlayer/index.js","components/YoutubePlayer/YoutubePlayer.js","components/Form/index.js","components/Form/Form.js","components/Screen/index.js","components/Screen/Screen.js","components/App/index.js","components/App/App.js","serviceWorker.js","components/ClientDetails/User.js","components/ClientDetails/Room.js","components/ClientDetails/index.js","components/ClientDetails/ClientDetails.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","index.js"],"names":["API_ENDPOINT","process","REACT_APP_API_ENDPOINT","SocketContext","createContext","SocketProvider","children","useState","socket","setSocket","useEffect","socketIOClient","console","log","Provider","value","updateSocket","useSocket","useContext","ClientDetailsContext","ClientDetailsProvider","clientUsername","setClientUsername","clientRoom","setClientRoom","updateClientUsername","updateClientRoom","useClientDetails","useStyles","makeStyles","theme","root","padding","spacing","margin","SelectUsername","username","setUsername","classes","TextField","className","id","label","onChange","event","target","bind","this","SelectRoom","room","setRoom","marginTop","width","button","SelectScreen","history","useHistory","Button","variant","color","type","onClick","preventDefault","emit","user","push","disabled","YoutubePlayer","videoId","playerComponent","setPlayerComponent","playerOptions","height","playerVars","autoplay","on","data","opts","onReady","handleVideoOnReady","onPlay","handleVideoPlay","onPause","handleVideoPause","onEnd","handleVideoEnd","getCurrentTime","playVideo","Form","callback","fnc","setVideoId","onSubmit","repeat","noValidate","autoComplete","text","required","style","Screen","routerProps","numClients","setNumClients","response","message","Typography","addVideoToQueue","match","error","App","exact","path","render","Boolean","window","location","hostname","User","Room","ClientDetails","Header","background","icon","marginRight","title","flexGrow","AppBar","position","Toolbar","edge","aria-label","Footer","appbar","alignItems","Date","getFullYear","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e7f6da16.chunk.js","sourcesContent":["import React, { useState, useContext, createContext, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || \"https://lets-watch-backend.herokuapp.com/\";\r\nconst SocketContext = createContext();\r\n\r\n/* \r\n    This function is responsible for providing the socket connection to the client\r\n    and will be uitlized in index.js to ensure re-renders do not cause an infinite\r\n    loop of socket connections.\r\n*/\r\nexport default function SocketProvider({ children }) {\r\n    const [socket, setSocket] = useState();\r\n\r\n    useEffect(() => {\r\n        setSocket(socketIOClient(API_ENDPOINT));\r\n    }, []);\r\n\r\n\r\n    const updateSocket = socketIOClient => setSocket(socketIOClient);\r\n\r\n    console.log(`Socket Connection: ${API_ENDPOINT}`); // \r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket, updateSocket }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useSocket = () => useContext(SocketContext);\r\n","import React, { useState, useContext, createContext } from 'react';\r\n\r\nconst ClientDetailsContext = createContext();\r\n\r\nexport default function ClientDetailsProvider({ children }) {\r\n    const [clientUsername, setClientUsername] = useState();\r\n    const [clientRoom, setClientRoom] = useState();\r\n\r\n    const updateClientUsername = clientUsername => setClientUsername(clientUsername);\r\n    const updateClientRoom = clientRoom => setClientRoom(clientRoom);\r\n\r\n\r\n    return (\r\n        <ClientDetailsContext.Provider value={{ clientUsername, updateClientUsername, clientRoom, updateClientRoom }}>\r\n            { children }\r\n        </ClientDetailsContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useClientDetails = () => useContext(ClientDetailsContext);\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function SelectUsername({username, setUsername}) {\r\n    let classes = useStyles();\r\n    \r\n    const handleUpdate = event => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <TextField className={classes.root} id=\"standard-basic\" value={username} label=\"enter username...\" \r\n                    onChange={handleUpdate.bind(this)}\r\n        />\r\n    )\r\n}","import SelectUsername from './SelectUsername';\r\n\r\nexport default SelectUsername;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function SelectRoom({room, setRoom}) {\r\n    let classes = useStyles();\r\n\r\n    const handleUpdate = event => {\r\n        setRoom(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <TextField className={classes.root} id=\"standard-basic\" label=\"enter room...\"  value={room} onChange={handleUpdate.bind(this)}/>\r\n    );\r\n}\r\n","import SelectRoom from './SelectRoom';\r\n\r\nexport default SelectRoom;","import React, {useState} from 'react';\r\nimport {useSocket} from '../../hooks/useSocket';\r\nimport {useClientDetails} from '../../hooks/useClientDetails';\r\nimport SelectUsername from '../SelectUsername';\r\nimport SelectRoom from '../SelectRoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(20),\r\n            width: '25ch',\r\n      },\r\n    },\r\n    button: {\r\n        '& > *': {\r\n            // marginTop: theme.spacing(1),\r\n        },\r\n    },\r\n  }));\r\n\r\nexport default function SelectScreen() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [room, setRoom] = useState(\"community\");\r\n    const { socket } = useSocket();\r\n    const { updateClientUsername, updateClientRoom } = useClientDetails();\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        socket.emit('update-user', {user: username, room: room});\r\n        updateClientRoom(room);\r\n        updateClientUsername(username);\r\n        setUsername('');\r\n        setRoom('');\r\n        history.push(\"/room\");\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className={classes.root}>\r\n                <SelectUsername username={username} setUsername={setUsername}/>\r\n                <SelectRoom room={room} setRoom={setRoom}/>\r\n                <br />\r\n                <br />\r\n            </div>\r\n             <Button className={classes.button} variant=\"contained\" color=\"primary\" \r\n                    type='submit' onClick={handleSubmit.bind(this)} disabled={!(username && room)}>\r\n                Enter Room\r\n            </Button>\r\n        </form>\r\n    )\r\n}","import SelectScreen from './SelectScreen';\r\n\r\nexport default SelectScreen;","import YoutubePlayer from './YoutubePlayer';\r\n\r\nexport default YoutubePlayer;","import React, { useEffect, useState } from 'react';\r\nimport Youtube from 'react-youtube';\r\n\r\nexport default function YoutubePlayer({videoId, socket}) {\r\n    const [playerComponent, setPlayerComponent] = useState();\r\n\r\n    \r\n    const playerOptions = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        }\r\n    };\r\n\r\n    socket.on('start-video', data => {\r\n        setPlayerComponent(<Youtube videoId={data.videoId} opts={playerOptions} onReady={handleVideoOnReady} \r\n                    onPlay={handleVideoPlay} onPause={handleVideoPause} \r\n                    onEnd={handleVideoEnd}\r\n        />)\r\n    });\r\n\r\n    const getCurrentTime = event =>  event.target.getCurrentTime();\r\n\r\n    const handleVideoOnReady = event => {\r\n        event.target.playVideo();\r\n    }\r\n\r\n    const handleVideoPlay = event => {\r\n        console.log('PLAY', event.target);\r\n        console.log(getCurrentTime(event));\r\n        socket.emit('play')\r\n    }\r\n\r\n    const handleVideoPause = event => {\r\n        console.log('PAUSE');\r\n        console.log('Current Time:', getCurrentTime(event));\r\n    }\r\n\r\n    const handleVideoEnd = event => {\r\n        console.log('END');\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {playerComponent}\r\n        </div>\r\n    )\r\n}","import Form from './Form.js';\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function Form({callback = fnc => fnc}) {\r\n    // set hooks\r\n    const [videoId, setVideoId] = useState(\"\");\r\n\r\n    const updateVideoId = (text) => setVideoId(text);\r\n    const clearVideoId = () => setVideoId(\"\");\r\n    const handleOnChange = (event) => updateVideoId(event.target.value);\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        callback(videoId.repeat(1));\r\n        clearVideoId();\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch'\r\n            }\r\n        }\r\n    }));\r\n\r\n    const buttonStyle = {\r\n        'padding': 'auto',\r\n        'width': '100px',\r\n        'margin': '10px',\r\n        'height': '50px'\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleOnSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField \r\n                    id=\"outlined-basic\"\r\n                    label=\"Youtube Link\"\r\n                    variant=\"outlined\"\r\n                    value={videoId}\r\n                    onChange={handleOnChange}\r\n                    required\r\n                />\r\n\r\n                <Button \r\n                    variant=\"contained\"\r\n                    style={buttonStyle}\r\n                    color=\"primary\"\r\n                    type=\"submit\"><b>Submit</b></Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import Screen from './Screen';\r\n\r\nexport default Screen;","import React, { useState, useEffect } from 'react';\r\nimport YoutubePlayer from '../YoutubePlayer';\r\nimport Form from '../Form/';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport '../../assets/Screen/Screen.css';\r\nimport {useSocket} from '../../hooks/useSocket';\r\n\r\n\r\nexport default function Screen( { routerProps }) {\r\n    // setup hooks\r\n    const [numClients, setNumClients] = useState();\r\n    const [videoId, setVideoId] = useState(\"\");\r\n    const [videoQueue, updateVideoQueue] = useState([]);\r\n\r\n    const addVideoToQueue = videoId => {\r\n        socket.emit('add-video-to-server-queue', videoId);\r\n    };\r\n\r\n    const { socket } = useSocket();\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if(socket) {\r\n    \r\n            socket.on('update-clients', response => {\r\n                if(response.message) {\r\n                    console.log(response.message);\r\n                }\r\n                setNumClients(response.numClients);\r\n            })\r\n\r\n            socket.on('welcome-new-user-to-room', response => {\r\n                console.log(response.message);\r\n            });\r\n\r\n            socket.on('user-joined-room', response => {\r\n                console.log(response.message);\r\n            });\r\n\r\n            socket.on('user-left-room', response => {\r\n                console.log(response.message);\r\n            })\r\n    \r\n            socket.on('user-joined-room-failed', response => {\r\n                console.log(response.message);\r\n            });\r\n\r\n            socket.on('update-client-video', data => {\r\n                setVideoId(data.videoId);\r\n            })\r\n        }\r\n    });\r\n\r\n    const youtubeVideoCallback = (response) => {\r\n        const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n\r\n        if(response) {\r\n            try {\r\n                const videoId = response.match(regExp)[7];\r\n                addVideoToQueue(videoId);\r\n            } catch (error) {\r\n                console.log(\"IMPROPER VIDEO FORMAT\");\r\n                // TODO: Handle notifying the sers\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='screen'>\r\n              {\r\n                videoId ? \r\n                <YoutubePlayer videoId={videoId} socket={socket} />\r\n                :\r\n                null\r\n            }\r\n            <Typography variant=\"h6\">Paste a video</Typography>\r\n            <Form callback={youtubeVideoCallback} />\r\n            <br />\r\n            { numClients > 1 ? \r\n                <Typography variant=\"subtitle1\"><b>{numClients} users</b> are currently watching</Typography> \r\n                :\r\n                <Typography variant=\"subtitle1\"><b>1 user</b> is currently watching</Typography> }\r\n        \r\n            <br /><br />\r\n        </div>\r\n    )\r\n}","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport '../../assets/App/App.css';\r\nimport SelectScreen from '../SelectScreen';\r\nimport Screen from '../Screen';\r\nimport { Route } from 'react-router-dom';\r\nimport {useClientDetails} from '../../hooks/useClientDetails';\r\n\r\nexport default function App() {\r\n  const {clientUsername, clientRoom} = useClientDetails();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path={`/`} render={ (routerProps) => < SelectScreen routerProps={routerProps} />} />\r\n      \r\n      { clientUsername && clientRoom ? \r\n            <Route exact path='/room' render={ (routerProps) => < Screen routerProps={routerProps} />} /> :\r\n            <Route exact path='/room' render={ (routerProps) => < SelectScreen routerProps={routerProps} />} /> \r\n      }\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useClientDetails} from '../../hooks/useClientDetails';\r\n\r\nexport default function User() {\r\n    const { clientUsername } = useClientDetails();\r\n    return <Button color=\"inherit\"><b>{clientUsername}</b></Button>\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useClientDetails} from '../../hooks/useClientDetails';\r\n\r\nexport default function Room() {\r\n    const { clientRoom } = useClientDetails();\r\n    return <Button color=\"inherit\"><b>{clientRoom}</b></Button>\r\n}","import ClientDetails from './ClientDetails';\r\n\r\nexport default ClientDetails;","import React from 'react';\r\nimport User from './User';\r\nimport Room from './Room';\r\nimport {useClientDetails} from '../../hooks/useClientDetails';\r\n\r\nexport default function ClientDetails() {\r\n    const {clientUsername, clientRoom} = useClientDetails();\r\n    return (\r\n        clientUsername && clientRoom ?\r\n        <div>\r\n            <User />\r\n            <Room />\r\n        </div> : <></>\r\n    )\r\n}","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../../assets/Header/Header.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ClientDetails from '../ClientDetails';\r\n\r\nexport default function Header() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            background: 'radial-gradient(circle, rgba(0,151,255,1) 0%, rgba(32,163,254,1) 100%)'\r\n        },\r\n        icon: {\r\n            marginRight: theme.spacing(5),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        button: {\r\n            padding: \"auto\",\r\n            margin: 10,\r\n            height: 50\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <PeopleAltIcon edge=\"start\" className={classes.icon} color=\"inherit\" aria-label=\"icon\" />\r\n                    <Typography variant=\"h5\" className={classes.title}>\r\n                        <b>Let's Watch Together</b>\r\n                    </Typography>\r\n                    <ClientDetails />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import Footer from './Footer';\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../../assets/Footer/Footer.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function Footer() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            background: \"radial-gradient(circle, rgba(0,151,255,1) 0%, rgba(32,163,254,1) 100%)\",\r\n        },\r\n        appbar: {\r\n            alignItems: \"center\"\r\n        }\r\n        }))\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <footer>\r\n            <AppBar position=\"static\" className={classes.appbar}>\r\n                <Toolbar>\r\n                    <Typography>\r\n                        Let's Watch &copy; {new Date().getFullYear()} - Created by Stephen White &amp; Champ Foronda\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </footer>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport SocketProvider from './hooks/useSocket';\r\nimport ClientDetailsProvider from './hooks/useClientDetails';\r\n\r\nReactDOM.render(\r\n    <ClientDetailsProvider>\r\n        <SocketProvider>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Header />\r\n                <App />\r\n                <Footer />\r\n            </Router>\r\n        </SocketProvider>\r\n    </ClientDetailsProvider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}